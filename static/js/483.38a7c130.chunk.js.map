{"version":3,"file":"static/js/483.38a7c130.chunk.js","mappings":"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","sources":["components/GuestBook.tsx","components/common/Div.tsx","components/common/Modal.tsx","components/common/Title.tsx"],"sourcesContent":["import React, { useCallback, useState, useEffect, useRef, ChangeEventHandler } from \"react\";\nimport styled from \"styled-components\";\nimport Div from \"./common/Div\";\nimport Title from \"./common/Title\";\nimport { PrismaClient } from \"@prisma/client\";\nimport Modal from \"./common/Modal\";\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nimport IconWrite from \"../images/write.png\";\n\nimport axios from 'axios'\n\nconst ItemGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  text-align: start;\n  max-height: 340px;\n  overflow: auto;\n`;\n\nconst ItemWrapper = styled.div`\n  border-radius: 22px;\n  box-shadow: 0 0 6px 0 rgb(0, 0, 0, 0.16);\n  height: 90px;\n  padding: 20px;\n  box-sizing: border-box;\n  width: calc(100% - 6px);\n  margin: 3px auto;\n`;\n\nconst WriteContainer = styled.div`\nbackground-color: #F4F4F4;\n    border-radius: 54px;\n    padding: 70px 40px 50px;\n    position: relative;\n    max-width: 400px;\n    max-height: 517px;\n    box-sizing: border-box;\n    width: 95%;\n    margin: 0 auto;\n`;\n\nconst Button = styled(\"button\")`\nheight: 33px;\nmin-width: 112px;\nborder-radius: 25px;\nbackground-color: transparent;\n    border-width: 0;\n    \n    font-size: 1em;\n    border: 0.2px solid #707070;\n    cursor: pointer;\n    margin-top: 15px;\n\n    img {\n      margin-right: 2px;\n    }\n    `\n\n    \n\nconst Input = styled.input`\n  border-width: 0;\n  border-radius: 14.5px;\n  font-size: inherit;\n    font-family: inherit;\n    line-height: inherit;\n    padding: 8px;\n    &:focus-visible {\n      outline-color: #707070;\n    }\n`\n\nconst Textarea = styled.textarea`\n  border-width: 0;\n  border-radius: 14.5px;\n  font-size: inherit;\n    font-family: inherit;\n    line-height: inherit;\n    resize: none;\n    padding: 8px;\n    height: 220px;\n    &:focus-visible {\n      outline-color: #707070;\n    }\n`\nconst Div1 = styled.div`\n  font-size: 1.53em;\n  line-height: 1.35em;\n  margin: 31px 0 56px;\n`\n\nconst FromDiv = styled.div`\n  font-size: 0.8em;\n  margin-bottom: 10px;\n`\n\nconst ContentDiv = styled.div`\n`\n\nconst BlankDiv = styled.div`\ndisplay: flex;\n    flex-direction: column;\n    gap: 10px;\n    text-align: start;\n    min-height: 100px;\n    color: #8C8C8C;\n    border-radius: 30px;\n    background-color: #F6F6F6;\n    max-height: 340px;\n    overflow: auto;\n    align-items: center;\n    justify-content: center;`\n\nconst Item = ({ item }: { item: {\n  boardId : number;\ncontent:string;\ndeletedate:string;\nregdate:string;\nupdatedate:string;\nwriter:string;\n  } }) => {\n  return (\n    <ItemWrapper>\n      <FromDiv>{`From. ${item.writer}`}</FromDiv>\n      <ContentDiv>{item.content}</ContentDiv>\n    </ItemWrapper>\n  );\n};\n\nfunction GuestBook() {\n  const client = new PrismaClient();\n  const divRef = useRef<HTMLDivElement>(null)\n  const [open, setOpen] = useState(false);\n  const [writer, setWriter] = useState('');\n  const [content, setContent] = useState('');\n\n  const [dataList, setDataList] = useState<{\n  boardId : number;\ncontent:string;\ndeletedate:string;\nregdate:string;\nupdatedate:string;\nwriter:string;\n  }[]>([])\n\n  const handleModalClose = useCallback(() => {\n    setOpen(false);\n    setWriter('')\n            setContent('')\n  }, []);\n\n  // useEffect(() => {\n  //   let timerId : any = null;\n  //   const divItem = divRef.current\n  //   if (divItem) {\n\n  //     timerId = setInterval(() => {\n\n  //       divItem.scrollTo(0, divItem.scrollTop+1);\n        \n  //       if (divItem.offsetHeight - divItem.scrollTop < 1) {\n  //         divItem.scrollTo(0, 0);\n  //       }\n  //     }, 80);\n      \n  //   }\n\n  //   return () => {\n  //     if (timerId) {\n\n  //     clearInterval(timerId);\n  //     }\n  //   }\n  // }, [])\n\n useEffect(() => {\n    // console.log('aaaa')\n\n            axios.post('http://43.203.47.37:8080/guestBook/list.json')\n            .then((response)=>\n            {\n                setDataList(response.data.root)\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n            });\n\n  }, [])\n  const onSubmit = useCallback(() => {\n    // console.log('writer  ', writer);\n    // console.log('content  ', content);\n      if (writer && content) {\n        \n            const formData = new FormData();\n            formData.append('writer',writer);\n            formData.append('content', content);\n\n            axios.post('http://43.203.47.37:8080/guestBook/insertInfo.json',formData)\n            .then((response)=>\n            {\n                axios.post('http://43.203.47.37:8080/guestBook/list.json')\n            .then((response)=>\n            {\n                setDataList(response.data.root)\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n            });\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n            });\n            setOpen(false)\n            setWriter('')\n            setContent('')\n      } else {\n        alert('작성자와 내용을 모두 입력해주세요 :)')\n      }\n\n\n  }, [writer, content])\n\n  // const handleWriterChange = ((v:ChangeEventHandler<HTMLInputElement>) => {\n  //   console.log(v);\n  //   // setWriter(v.target.value)\n  // }, [])\n\n// useEffect(() => {\n//   \n// let reqOption = {\n//       method : \"get\",\n//       headers : {\n//         \"content-type\" : \"application/json\"\n//       }\n//     }\n\n//   fetch(\"/api/product\", reqOption).then((res) => console.log(res))\n// .then(data => console.log(data))\n\n// }, [])\n\n// useEffect(() => {\n//   fetch(\"/selectData.php\", {\n//       method: \"GET\"\n//     })\n//       .then((res) => {\n//         console.log(res);\n//         if (res.ok === false) {\n//           alert(\"연결이 원활하지 않습니다.\");\n//           // navigate(\"/\");\n//         } else if (res.ok) {\n//           alert(\"저장되었습니다.\");\n//           // navigate(\"/\");\n//         }\n//       })\n//       .catch(() => {\n//         console.log(\"초기 화면 돌아가기\");\n//       });\n\n// }, [])\n\n  // const handleTest = useCallback(() => {\n  //   const input = {a: 'aa', b: 'bb'}\n  //   axios.post('http://localhost:3306/api/user/save', input)\n\n  // }, [])\n  \n  const target = useRef<HTMLDivElement>(null)\n\n  const [figure, setFigure] = useState(false);\n\n  const onIntersect = ([entry] : any[], observer:any) => {\n      if (entry.isIntersecting) {\n        \n        setFigure(true)\n        // entry.style.visibility= 'visible';\n        // entry.style.animation= 'smoothAppear3 2.5s ease 1s';\n        observer.unobserve(entry.target);\n        // await getMoreItem();\n        observer.observe(entry.target);\n      }\n    };\n\n    useEffect(() => {\n      if (target.current && !figure) {\n        \n        const observer = new IntersectionObserver(onIntersect as IntersectionObserverCallback);\n        observer.observe(target.current);\n        return () => observer.disconnect();\n      } \n    }, [figure]);\n\n  return (\n    <Div ref={target} $isvisible={figure.toString()}>\n      <Title>GUEST BOOK</Title>\n      <Div1>신랑, 신부에게 전하는 말씀</Div1>\n\n      <ItemGroup ref={divRef}>\n        {dataList.length < 1 ? (<BlankDiv>신랑, 신부에게 축복의 말씀을 전해주세요!</BlankDiv>) :(dataList.map((v, idx) => (\n          <Item item={v} key={idx}/>\n        )))}\n      </ItemGroup>\n\n      <div>\n        <Button onClick={() => setOpen(true)}>\n        <img src={IconWrite} alt='' style={{ marginRight: \"4px\", width: '10px', height: '10px' }}/>\n        작성하기</Button>\n        \n        {/* <button onClick={handleTest}>테스트</button> */}\n      </div>\n\n      <Modal open={!!open} onClose={handleModalClose}>\n        <WriteContainer>\n        <div style={{display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '10px', justifyItems: 'start',     fontWeight: 700}}>\n          <div style={{lineHeight: '34px'}}>작성자</div>\n          <Input value={writer} onChange={(v) => setWriter(v.target.value)}/>\n          <div style={{lineHeight: '34px'}}>내용</div>\n          <Textarea value={content} onChange={(v) => setContent(v.target.value)}/>\n          </div>\n          <Button onClick={onSubmit}>\n          <img src={IconWrite} alt='' style={{ marginRight: \"4px\", width: '10px', height: '10px' }}/>\n          작성하기</Button>\n        </WriteContainer>\n      </Modal>\n    </Div>\n  );\n}\n\nexport default GuestBook;\n","import styled from \"styled-components\";\n// ${({$isvisible}) => \n//   ({opacity: $isvisible==='true' ? '1': '0'})\n// }\n\nconst Div = styled(\"div\")<{$isvisible?:string}>`\n  padding: 30px;\n  padding-bottom: 120px;\n\n  opacity: 0;\n\n  @media (max-width: 380px) {\n    padding: 30px;\n    padding-left: 10px;\n    padding-right: 10px;\n    padding-bottom: 80px;\n  }\n\n  @keyframes smoothAppear3 {\n    from {\n      opacity: 0;\n      transform: translateY(-5%);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n  ${({$isvisible}) => \n    ({animation: $isvisible==='true' ? 'smoothAppear3 2s ease 0.4s': 'none'})\n  }\n  animation-fill-mode: forwards;\n\n  `;\n\n\nexport default Div;\n","import React, { ReactNode, useEffect, useState } from \"react\";\nimport { styled } from \"styled-components\";\n\nconst Wrapper = styled.div`\n  // display: relative;\n  // min-width:\n  // position: fixed;\n  background-color: rgb(0, 0, 0, 0.3);\n\n  z-index: 50;\n  // width: 100%;\n  // height: 100%;\n\n  //     width: 100%;\n  //   height: 100%;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n`;\n\nconst Container = styled.div`\n//   background-color: #fff;\n`;\n\nfunction Modal({\n  children,\n  open = false,\n  onClose,\n  disableBackClick=false\n}: {\n  children: ReactNode;\n  open?: boolean;\n  onClose: () => void;\n  disableBackClick?: boolean;\n}) {\n  const [modalOpen, setModalOpen] = useState(open);\n\n  useEffect(() => {\n    setModalOpen(open);\n  }, [open]);\n\n  return (\n    <Wrapper\n    // style={{display: modalOpen ? 'flex' : 'none'}}\n    style={{visibility: modalOpen ? 'visible' : 'hidden'}}\n      onClick={() => {\n        if (!disableBackClick) {\n          console.log(\"background click\");\n          setModalOpen(false);\n          onClose();\n        }\n      }}\n    >\n      <Container\n        onClick={e => {\n          e.stopPropagation();\n          console.log(\"container click\");\n        }}\n      >\n        {children}\n      </Container>\n    </Wrapper>\n  )\n}\n\nexport default Modal;\n","import styled from \"styled-components\";\n\nconst Title = styled(\"div\")`\n  font-size: 15px;\n  letter-spacing: 0.5em;\n  line-height: 1.2em;\n  font-family: \"Bodoni 72\";\n  font-weight: 500;\n  color: #868383;\n\n  @keyframes smoothAppear2 {\n    from {\n      opacity: 0;\n      transform: translateY(30%);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n\n  animation: smoothAppear2 1s;\n`;\n\nexport default Title;\n"],"names":["ItemGroup","styled","div","_templateObject","_taggedTemplateLiteral","ItemWrapper","_templateObject2","WriteContainer","_templateObject3","Button","_templateObject4","Input","input","_templateObject5","Textarea","textarea","_templateObject6","Div1","_templateObject7","FromDiv","_templateObject8","ContentDiv","_templateObject9","BlankDiv","_templateObject10","Item","_ref","item","_jsxs","children","_jsx","concat","writer","content","PrismaClient","divRef","useRef","open","setOpen","useState","setWriter","setContent","dataList","setDataList","handleModalClose","useCallback","useEffect","axios","post","then","response","data","root","catch","error","console","log","onSubmit","formData","FormData","append","alert","target","figure","setFigure","onIntersect","_ref2","observer","entry","isIntersecting","unobserve","observe","current","IntersectionObserver","disconnect","Div","ref","$isvisible","toString","Title","length","map","v","idx","onClick","src","IconWrite","alt","style","marginRight","width","height","Modal","onClose","display","gridTemplateColumns","gap","justifyItems","fontWeight","lineHeight","value","onChange","animation","Wrapper","Container","disableBackClick","modalOpen","setModalOpen","visibility","e","stopPropagation"],"sourceRoot":""}